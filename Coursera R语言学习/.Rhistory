link <- if (i < 10) {
paste("00", i, ".csv", sep = "")
} else if (i < 100) {
paste("0", i, ".csv", sep = "")
} else {
paste(i, ".csv", sep = "")
}
content <- read.csv(link)
bad1 <- is.na(content["sulfate"])
bad2 <- is.na(content["nitrate"])
if (sum(!bad1) > threshold && sum(!bad2) > threshold) {
##content[bad1, "sulfate"] <- 0
##content[bad2, "nitrate"] <- 0
calc <- cov(content["sulfate"], content["nitrate"]，use = "complete")
##calc <- var(content["sulfate"], content["nitrate"], na.rm = TRUE)
v <- c(v, calc)
}
}
v
}
corr <- function(directory, threshold = 0) {
setwd(paste(getwd(), "/", directory, sep = ""))
v <- vector(mode = "numeric", 0)
for (i in 1:332) {
link <- if (i < 10) {
paste("00", i, ".csv", sep = "")
} else if (i < 100) {
paste("0", i, ".csv", sep = "")
} else {
paste(i, ".csv", sep = "")
}
content <- read.csv(link)
bad1 <- is.na(content["sulfate"])
bad2 <- is.na(content["nitrate"])
if (sum(!bad1) > threshold && sum(!bad2) > threshold) {
##content[bad1, "sulfate"] <- 0
##content[bad2, "nitrate"] <- 0
calc <- cov(content["sulfate"], content["nitrate"]，use = "complete")
##calc <- var(content["sulfate"], content["nitrate"], na.rm = TRUE)
v <- c(v, calc)
}
}
v
}
corr <- function(directory, threshold = 0) {
setwd(paste(getwd(), "/", directory, sep = ""))
v <- vector(mode = "numeric", 0)
for (i in 1:332) {
link <- if (i < 10) {
paste("00", i, ".csv", sep = "")
} else if (i < 100) {
paste("0", i, ".csv", sep = "")
} else {
paste(i, ".csv", sep = "")
}
content <- read.csv(link)
bad1 <- is.na(content["sulfate"])
bad2 <- is.na(content["nitrate"])
if (sum(!bad1) > threshold && sum(!bad2) > threshold) {
calc <- cov(content["sulfate"], content["nitrate"]，use = "complete")
v <- c(v, calc)
}
}
v
}
help(format())
help(format
s
help(format)
data.frame(id = id, nobs = 0)
help(data.frame)
id <- 1:10
data.frame(id, nobs = 0)
id<- 2:3
data.frame(id, nobs = 0)
data.frame(id = id, nobs = 0)
data.frame(icc = id, nobs = 0)
ncc <- 1:4
data.frame(icc = id, nuu = ncc)
id
nuu
ncc
help(rbind)
c(5,6)
data.frame(icc = id, nuu = ncc)
x <- data.frame(icc = id, nuu = ncc)
x
y <- c(5,6)
rbind(x,y)
v <- c(NA, 4)
v
v <- c(NA,NA)
v
length(v)
x <- rbind(x,y)
x
help(length)
x <- data.frame(icc = id, nuu = NA)
x
con <- complete.cases(x)
con
length(x[con])
length
c(1, length(x[con]))
x <- data.frame(icc = id, nuu = NA, se = 1:10)
x
con <- complete.cases(x)
length(x[con])
v <- C()
c <- c()
c
c
class(c)
v <- vector(mode = "numeric", length = 0)
v
length(v)
length(c)
x <- function(y, z) {
y <- y + 1
y + z
}
c <-  x(5)
c <- x(5)
x <- function(y, z = 1) {
y <- y + 1
y + z
}
c <- x(5)
c
m <- list(3,5)
m
mean(m)
sapply(m, mean)
f <- gl(5,10)
f
f <- gl(3:5,2)
f <- c("h", "o", "l")
f
x <- c(1:5,2:7,3:9)
x
x <- c(1,2,3)
x
tapply(x, f, mean)
m <- tapply(x, f, mean)
m
m$h
class(m)
m <- tapply(x, f, mean, simplify = FALSE)
m
class(m)
m$h
library(swirl)
swirl()
5 + 7
x <- 5 + 7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z , 5)
c(z, 5, z)
c(z, 555, z)
z * 2 + 100
my_sqrt <- z - 1
my_sqrt <- sqrt(z - 1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z * 2 + 1000
my_div
b <- gl(3,5)
b
class(b)
f1 <- gl(2, 5)
f2 <- gl(5, 2)
interaction(f1, f2)
library(swirl)
swirl()
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix()
?matrix
my_matrix2(1:20, nrow = 4, ncol = 5)
my_matrix <- matrix(1:20, nrow = 4, ncol = 5)
my_matrix2 <- matrix(1:20, nrow = 4, ncol = 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.fra
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
rnorm(11)
runif(11)
library(swir)
library(swirl)
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_l)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
sapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags, unique)
unique_vals
lapply(unique_vals, length)
sapply(unique_vals, unique)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
mean(x)
mean(xxx)
traceback
traceback()
lm(y - x)
traceback()
lm(y - xxx)
traceback()
debug(lm)
lm(y - xxx)
options(error = recover)
read.csv("hahasfile")
2
2
2
2
2
2
2
2
q
q
nn
mean(yy)
1
1
nn
mean(uu)
traceback()
traceback()
1
n
n
traceback()
traceback()
library(datasets)
data(iris)
?iris
iris
tapply(iris, Species, mean)
tapply(iris, iris$Species, mean)
tapply(iris, iris$Species, sum)
tapply(iris, iris$Species, sum)
tapply(iris, iris, sum)
iris$Species
tapply(iris, iris$Species, sum)
split(iris, iris$Species)
sapply(split(iris, iris$Species), mean)
sapply(split(iris, iris$Species)$Species, mean)
a <- split(iris, iris$Species)
sapply(split(iris, iris$Species)$virginica, mean)
library(datasets)
data(mtcars)
mtcars
mtcars$syl
mtcars$cyl
with(mtcars, tapply(mpg, cyl, mean))
tapply(mtcars, mtcars$cyl, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
with(mtcars, tapply(hp, cyl, mean))
a <-  with(mtcars, tapply(hp, cyl, mean))
class(a)
a $4
a <-  with(mtcars, tapply(hp, cyl, mean, simplify = FALSE))
class(a)
a <-  with(mtcars, tapply(hp, cyl, mean, simplify = TRUE))
class(a)
a
a
a[3]
a[3] - a[1]
debug(ls)
ls
ls
q
library(datasets)
data(iris)
sapply(split(iris, iris$Species)$Species, mean)
sapply(split(iris, iris$Species)$virginica, mean)
a <-  with(mtcars, tapply(hp, cyl, mean, simplify = TRUE))
a[3] - a[1]
library(datasets)
sapply(split(iris, iris$Species)$virginica, mean)
sapply(split(iris, iris$Species)$virginica, mean)
a <-  with(mtcars, tapply(hp, cyl, mean, simplify = TRUE))
a[3] - a[1]
q()
library(datasets)
sapply(split(iris, iris$Species)$virginica, mean)
a <-  with(mtcars, tapply(hp, cyl, mean, simplify = TRUE))
a[3] - a[1]
a <- c(1,2)
str(a)
library(swirl)
swirl()
?sample()
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 7, replace = TRUE)
sample(1:6, 7, replace = FALSE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10)
letters
LETTERS
SAMPLE(LETTERS)
sample(LETTERS)
set.seed(20)
x <- nrow(100)
e <- rnorm(100, 0, 2)
y <- 0.5 + 2 * x + e
summary(y)
y
summary(y)
y
x
x <- rnorm(100)
y <- 0.5 + 2 * x + e
summary(y)
y
plot(x, y)
summary(y)
rpois(100)
rpois(100, 1)
library(swi)
library(swirl)
swirl()
smaple()
sample()
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10)
LETTERS
smaple(LETTERS)
sample(LETTERS)
flips <- sample(c(0, 1), prob = c(0.3, 0.7))
flips <- sample(c(0, 1), 100, replace = TRUE, prob = )
flips <- sample(c(0, 1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(100, size = 1, prob = 0.7)
flips2
rbinom(1, size = 19, prob = 0.7)
rbinom(19, size = 19, prob = 0.7)
rbinom(19, size = 1, prob = 0.7)
rbinom(19, size = 2, prob = 0.7)
rbinom(19, size = 2, prob = 1)
rbinom(19, size = 2, prob = 0.9)
sum(flips2)
rnorm()
?rnorm
rnorm(10)
x <- nrorm(10)
x <- rnorm(100)
(10, mean = 100, sd = 25)
rnorm(10, mean = 100, sd = 25)
rpois(n = 5, mean = 10)
?rpois
rpois(n = 5, lambda = 10)
my_pois <- rpois(n = 5, lambda = 10)
my_pois <- replicate(100, rpois(5, 10))
my_pois
colMeans(my_pois)
cm <- colMeans(my_pois)
hist*cm
hist(cm)
y <- rnorm(100)
y
plot(x, y)
hist(y)
hist(y,x)
cm
cm
cm
hist(cm)
library(swirl)
swirl()
1
1q
q
q()
library(swirl)
swirl()
sample(100, c(0,1), prob = c(0.3, 0.7))
sample(c(0, 1), 100,  prob = c(0.3, 0.7))
flips <-  sample(c(0, 1), 100,  prob = c(0.3, 0.7))
flips <-  sample(c(0, 1), 100,  prob = c(0.3, 0.7), replace = TRUE)
flips
q()
library(swirl)
quit()
library(swirl)
ls
ls()
rm(list = ls())
ls()
swirl()
data(cars)
help(cars)
head(cars)
plot(cars)
library(swirl)
swirl()
plot()
?plot
plot(x = cars$speed, y = cars$dist)
plot(x = cars$dist, y = cars$speed)
plot(Speed = cars$dist, y = cars$speed)
plot(x = cars$dist, y = cars$speed)
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance", title = main)
plot()
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
swirl()
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance", main = "My Plot")
plot(cars, main = "My Plot")
plot(cars, main = "My Plot Subtitle")
plot(cars, sub = "My Plot Subtitle")
plot(cars, col = 2)
plot(cars, xlim = c(10, 15))
plot(cars, pch = 2)
load(mtcars)
mtcars
data(mtcars)
?boxplot
boxplot(formula = mpg ~ cyl, data = mtcars)
hist()
hist(mtcars$mpg)
B <- matrix(1:9, nrow = 3, ncol = 3)
B
help(solve)
solve(B)
B[3, 2] = 5
B
solve(B)
Rprof()
Rprof()
summaryRprof()
lm()
summaryRprof(lm())
summaryRprof(lm
)
summaryRprof(lm)
Rprof(lm)
set.seed(1)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
help(norm)
help(rnorm)
help(dpois)
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0 , 20)
y <- 0.5 + 2 * x + e
plot(y)
plot(y,x)
plot(x,y)
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
help(rpois)
set.seed(1)
rpois(5, 2)
